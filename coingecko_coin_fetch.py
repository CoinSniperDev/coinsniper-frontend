import requests
import os

def main():
    # 1. Fetch top 10 coins data from CoinGecko
    url = "https://api.coingecko.com/api/v3/coins/markets"
    params = {
        "vs_currency": "usd",
        "order": "market_cap_desc",
        "per_page": 10,
        "page": 1,
        "sparkline": "false"
    }
    
    response = requests.get(url, params=params)
    response.raise_for_status()
    coins_data = response.json()

    # 2. Ensure the public/coins directory exists
    coins_dir = os.path.join("public", "coins")
    os.makedirs(coins_dir, exist_ok=True)

    # 3. Prepare to build a list of coin objects for the TypeScript file
    ts_coins = []

    for coin in coins_data:
        # Extract name, symbol, and image URL
        name = coin["name"]
        ticker = coin["symbol"].upper()  # e.g. 'BTC'
        image_url = coin["image"]

        # 4. Download image for each coin
        print(f"Downloading {name} logo from {image_url}...")
        img_data = requests.get(image_url).content
        
        # Save as {symbol}.png or you can use the coin's ID
        filename = f"{ticker.lower()}.png"
        file_path = os.path.join(coins_dir, filename)
        with open(file_path, "wb") as f:
            f.write(img_data)
        
        # 5. Build the record for our TS file
        ts_coins.append({
            "name": name,
            "ticker": ticker,
            "image": f"/coins/{filename}"
        })

    # 6. Generate a coins.ts file
    ts_path = os.path.join("src", "coins.ts")
    with open(ts_path, "w", encoding="utf-8") as f:
        f.write("// This file is auto-generated by download_coins.py\n")
        f.write("export const coins = [\n")
        for c in ts_coins:
            f.write(f"  {{ name: '{c['name']}', ticker: '{c['ticker']}', image: '{c['image']}' }},\n")
        f.write("];\n")

    print(f"\nDone! The top 10 coin images are saved to {coins_dir}")
    print(f"TypeScript data file generated at: {ts_path}")


if __name__ == "__main__":
    main()
